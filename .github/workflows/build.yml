name: Python application

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.12]  # Certifique-se de que a versÃ£o do Python seja suportada

    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15.3-alpine  # Alinhado com o docker-compose.yml
        env:
          POSTGRES_USER: bookstore_dev
          POSTGRES_PASSWORD: bookstore_dev
          POSTGRES_DB: bookstore_dev_db
        options: >-
          --health-cmd="pg_isready -U bookstore_dev"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
        ports:
          - 5433:5432  # Alinhado com o mapeamento de portas no docker-compose.yml

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        poetry install

    - name: Wait for DB
      run: |
        for i in {1..20}; do
          pg_isready -h db -p 5432 -U bookstore_dev && break
          echo "Waiting for database..."
          sleep 3
        done

    - name: Run migrations
      run: |
        poetry run python manage.py migrate --noinput

    - name: Run tests
      run: |
        poetry run python manage.py test
